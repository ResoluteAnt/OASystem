<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--{1}调用包扫描-->
    <context:component-scan base-package="com.gec.service"/>
    <!--{2}属性占位解析器-->
    <context:property-placeholder
        location="classpath:mysql.properties"/>
    <!--{3}基础数据源-
        jar包 ：commons-dbcp-1.3.jar
        查找：[o][a][c][d][子包]
        org.apache.commons.dbcp.BasicDataSource
    -->
    <bean id="BasicDataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--{4}会话工厂Bean
        jar包 ：mybatis-spring-1.3.2.jar(mybatis整合包)
        查找：[o][m][s][子包]
        org.mybatis.spring.SqlSessionFactoryBean
        PaginationInterceptor
    -->
    <bean id="SqlSessionFactoryBean"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="BasicDataSource" />
        <property name="mapperLocations"
                  value="classpath*:./mappers/*.xml" />
        <property name="configLocation"
                  value="classpath:mybatis.cfg.xml" />
    </bean>

    <!--{5}映射扫描器配置
        功能：主要用来扫描dao层下动态代理接口文件
            生成临时的委托对象，到时通过spring依赖注入自动装配到
            Service 层的实现类的相关属性上
        -->
    <bean id="MapperScannerConfigurer"
          class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--{1}mapper 接口文件的存放地址-->
        <property name="basePackage" value="com.gec.dao"/>
        <!--{2}SqlSessionFactoryBeanName-->
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactoryBean"/>
    </bean>
    <!--{6}事务管理器
        {a}jar包：spring-jdbc-4.2.5.RELEASE.jar
        {b}查找：**[J][D][子包]
    -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"
                  ref="BasicDataSource"/>
    </bean>

    <!--{7}事务增强Bean-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--{ps}配置事务属性设置-->
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <!--{8}全局事务 AOP 配置-->
    <aop:config>
        <!--{a}配置切点(放在切面上)-->
        <aop:pointcut id="txPointCut"
                      expression="execution(* com.gec.service.*.*(..))"/>
        <!--{b}配置切面-->
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="txPointCut"/>
    </aop:config>
</beans>