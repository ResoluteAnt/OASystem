<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gec.dao.UserMapper">
    <!--
      //根据角色名查询一个角色
    User getUserByName(
            @Param("username") String username);
    -->
    <select id="getUserByName"
         resultMap="userMap">
        SELECT u.*,r.id roleId,r.roleName
        FROM user_role ur
        LEFT JOIN user u ON u.id = ur.user_id
        LEFT JOIN role r ON r.id = ur.role_id
        WHERE u.username = #{username}
    </select>

    <resultMap id="userMap" type="com.gec.domain.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickName" property="nickName"/>
        <result column="deptId" property="deptId"/>
        <result column="email" property="email"/>
        <result column="no" property="no"/>
        <result column="roleId" property="role_id"/>

        <!-- {ps}这里来封装Set<Role>集合
                一对多关联设置
        -->
        <collection property="roles" column="roleId"
                    ofType="com.gec.domain.Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="roleName"/>
            <result column="roleDesc" property="roleDesc"/>
        </collection>
    </resultMap>


    <!--
        //{2}UserMapper：搜索一个List列表到
        List<User> searchUserList(
                    Map<String,String> map);
    -->
    <select id="searchUserList" resultMap = "userMap">
        SELECT u.id,u.username,u.nickName,u.deptId,
                r.id roleId,r.roleName,r.roleDesc,
                u.email,u.createDate
        FROM user_role ur
        LEFT JOIN user u ON u.id = ur.user_id
        LEFT JOIN role r ON r.id = ur.role_id
        <where>
            <if test="username!=null">
                and u.username like "%"#{username}"%"
            </if>
            <if test="nickName!=null">
                and u.nickName like "%"#{nickName}"%"
            </if>
            <if test="deptId!=null">
                and u.deptId like "%"#{deptId}"%"
            </if>
            <if test="role_id!=null">
                and r.id like "%"#{role_id}"%"
            </if>
        </where>
    </select>

    <!--
     //{3}根据用户id查询出一个用户的数据
        User getOneUserById(
                @Param("id") String id);
    -->
    <select id="getOneUserById" resultType="com.gec.domain.User">
         SELECT u.*,r.id role_id
         FROM user_role ur
         LEFT JOIN user u ON u.id = ur.user_id
         LEFT JOIN role r ON r.id = ur.role_id
         where u.id = #{id}
    </select>


    <!--
         //{4}根据用户id删除一个用户
            int delOneUserById(
                 @Param("id") String id);
    -->
    <delete id="delOneUserById">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!--
         //{5}根据User对象保存一个用户
        int saveOneUser( User user );
    -->
    <insert id="saveOneUser">
        INSERT INTO user(id,username,password,nickName,deptId,email,no,createDate)
        VALUE(#{id},#{username},#{password},#{nickName},
              #{deptId},#{email},#{no},NOW());
    </insert>
    <!--
         //{6}根据user_id 和 role_id 保存一个关系表记录
        int saveOneUserRole(
            @Param("user_id") String user_id,
            @Param("role_id") String role_id,
            @Param("comment") String comment);
    -->
    <insert id="saveOneUserRole">
        INSERT INTO user_role(user_id,role_id,comment)
        VALUE(#{user_id},#{role_id},#{comment});
    </insert>

    <!--
        //{7}根据User对象修改一个用户的信息
            int updateOneUserInfo(User user);
    -->
    <update id="updateOneUserInfo">
        UPDATE USER
        <set>
            <if test="username!=null">
                username = #{username},
            </if>
            <if test="password!=null">
                password = #{password},
            </if>
            <if test="nickName!=null">
                nickName = #{nickName},
            </if>
            <if test="deptId!=null">
                deptId = #{deptId},
            </if>
            <if test="email!=null">
                email = #{email}
            </if>
        </set>
         WHERE id = #{id}
    </update>

</mapper>